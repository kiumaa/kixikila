version: '3.8'

services:
  # KIXIKILA Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kixikila-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - kixikila-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/v1/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: kixikila-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    depends_on:
      - backend
    networks:
      - kixikila-network

  # Redis for caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: kixikila-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - kixikila-network
    command: redis-server --appendonly yes

volumes:
  redis-data:
    driver: local

networks:
  kixikila-network:
    driver: bridge